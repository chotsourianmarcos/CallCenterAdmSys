{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Usuario.DESKTOP-8URFH3T\\\\Desktop\\\\MidasFrontEnd\\\\MidasFrontEnd\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClientsAPIService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n\n  readClients() {\n    return this.httpClient.get(environment.clients + \"/readAll\");\n  }\n\n  readClientsByParameters(clientParmams) {\n    return this.httpClient.get(environment.clients + \"/\" + clientParmams);\n  }\n\n  addClient(newClient) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.httpClient.post(environment.clients + \"/add\", newClient, {\n        observe: 'response'\n      }).subscribe({\n        next: data => data,\n        error: error => console.error('¡There was an error!', error)\n      });\n    })();\n  }\n\n  updateClient(updateClient) {\n    return this.httpClient.patch(environment.clients, updateClient, {\n      observe: 'response'\n    });\n  }\n\n}\n\nClientsAPIService.ɵfac = function ClientsAPIService_Factory(t) {\n  return new (t || ClientsAPIService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nClientsAPIService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClientsAPIService,\n  factory: ClientsAPIService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Usuario.DESKTOP-8URFH3T/Desktop/MidasFrontEnd/MidasFrontEnd/src/app/APIServices/ClientsAPI/clients-api.service.ts"],"names":["environment","i0","i1","ClientsAPIService","constructor","httpClient","readClients","get","clients","readClientsByParameters","clientParmams","addClient","newClient","post","observe","subscribe","next","data","error","console","updateClient","patch","ɵfac","ClientsAPIService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,8BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,iBAAN,CAAwB;AAC3BC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKD,UAAL,CAAgBE,GAAhB,CAAoBP,WAAW,CAACQ,OAAZ,GAAsB,UAA1C,CAAP;AACH;;AACDC,EAAAA,uBAAuB,CAACC,aAAD,EAAgB;AACnC,WAAO,KAAKL,UAAL,CAAgBE,GAAhB,CAAoBP,WAAW,CAACQ,OAAZ,GAAsB,GAAtB,GAA4BE,aAAhD,CAAP;AACH;;AACKC,EAAAA,SAAS,CAACC,SAAD,EAAY;AAAA;;AAAA;AACvB,aAAO,KAAI,CAACP,UAAL,CAAgBQ,IAAhB,CAAqBb,WAAW,CAACQ,OAAZ,GAAsB,MAA3C,EAAmDI,SAAnD,EAA8D;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAA9D,EACFC,SADE,CACQ;AACXC,QAAAA,IAAI,EAAEC,IAAI,IAAIA,IADH;AAEXC,QAAAA,KAAK,EAAEA,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AAFL,OADR,CAAP;AADuB;AAM1B;;AACDE,EAAAA,YAAY,CAACA,YAAD,EAAe;AACvB,WAAO,KAAKf,UAAL,CAAgBgB,KAAhB,CAAsBrB,WAAW,CAACQ,OAAlC,EAA2CY,YAA3C,EAAyD;AAAEN,MAAAA,OAAO,EAAE;AAAX,KAAzD,CAAP;AACH;;AAnB0B;;AAqB/BX,iBAAiB,CAACmB,IAAlB,GAAyB,SAASC,yBAAT,CAAmCC,CAAnC,EAAsC;AAAE,SAAO,KAAKA,CAAC,IAAIrB,iBAAV,EAA6BF,EAAE,CAACwB,QAAH,CAAYvB,EAAE,CAACwB,UAAf,CAA7B,CAAP;AAAkE,CAAnI;;AACAvB,iBAAiB,CAACwB,KAAlB,GAA0B,aAAc1B,EAAE,CAAC2B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE1B,iBAAT;AAA4B2B,EAAAA,OAAO,EAAE3B,iBAAiB,CAACmB,IAAvD;AAA6DS,EAAAA,UAAU,EAAE;AAAzE,CAAtB,CAAxC","sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class ClientsAPIService {\r\n    constructor(httpClient) {\r\n        this.httpClient = httpClient;\r\n    }\r\n    readClients() {\r\n        return this.httpClient.get(environment.clients + \"/readAll\");\r\n    }\r\n    readClientsByParameters(clientParmams) {\r\n        return this.httpClient.get(environment.clients + \"/\" + clientParmams);\r\n    }\r\n    async addClient(newClient) {\r\n        return this.httpClient.post(environment.clients + \"/add\", newClient, { observe: 'response' })\r\n            .subscribe({\r\n            next: data => data,\r\n            error: error => console.error('¡There was an error!', error)\r\n        });\r\n    }\r\n    updateClient(updateClient) {\r\n        return this.httpClient.patch(environment.clients, updateClient, { observe: 'response' });\r\n    }\r\n}\r\nClientsAPIService.ɵfac = function ClientsAPIService_Factory(t) { return new (t || ClientsAPIService)(i0.ɵɵinject(i1.HttpClient)); };\r\nClientsAPIService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ClientsAPIService, factory: ClientsAPIService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}